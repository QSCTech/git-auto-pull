#!/bin/sh
### BEGIN INIT INFO
# Provides:				git-auto-pull
# Required-Start:		$network $remote_fs $local_fs
# Required-Stop:		$network $remote_fs $local_fs
# Default-Start:		2 3 4 5
# Default-Stop:			0 1 6
# Short-Description:	Stop/start git-auto-pull
### END INIT INFO

#
# Copyright (C) Senorsen (Zhang Sen) <sen@senorsen.com>
#
# This software is distributed under the terms of GPLv3 or later,
# See `LICENSE' for more information. 
#


PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
DESC=git-auto-pull
NAME=git-auto-pull
PS=git-auto-pull
DAEMON=/usr/sbin/git-auto-pull
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
SLEEPSEC=1

[ -x $DAEMON ] || exit 0
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

[ -f /lib/init/vars.sh ] && . /lib/init/vars.sh
[ -f /lib/lsb/init-functions ] && . /lib/lsb/init-functions
[ -f /etc/rc.d/init.d/functions ] && . /etc/rc.d/init.d/functions

do_start() {
	$DAEMON
	RETVAL="$?"
	return "$RETVAL"
}

do_stop() {
	[ -f $PIDFILE ] || return 0
	kill -9 `cat $PIDFILE`
	RETVAL="$?"
	rm -rf $PIDFILE
	return "$RETVAL"
}

pidof_daemon() {
	PIDS=`pidof $PS` || true

	[ -e $PIDFILE ] && PIDS2=`cat $PIDFILE`

	for i in $PIDS; do
		if [ "$i" = "$PIDS2" ]; then
			return 1
		fi
	done

	return 0

}

case "$1" in
	start)
		if type -t log_daemon_msg | grep -i function > /dev/null; then
			log_daemon_msg "Starting $DESC " "$NAME"
		else
			echo -n "Starting $NAME: "
		fi
		do_start
		case "$?" in
			0)
				if type -t log_end_msg | grep -i function > /dev/null; then
					log_end_msg 0
				fi
				if type -t success | grep -i function > /dev/null; then
					success
					echo ""
				fi
				;;
			*)
				if type -t log_end_msg | grep -i function > /dev/null; then
					log_end_msg 1
				fi
				if type -t failure | grep -i function > /dev/null; then
					failure
					echo ""
				fi
				;;
		esac
		;;
	stop)
		if type -t log_daemon_msg | grep -i function > /dev/null; then
			log_daemon_msg "Stopping $DESC " "$NAME"
		else
			echo -n "Stopping $NAME: "
		fi
		do_stop
		case "$?" in
			0)
				if type -t log_end_msg | grep -i function > /dev/null; then
					log_end_msg 0
				fi
				if type -t success | grep -i function > /dev/null; then
					success
					echo ""
				fi
				;;
			*)
				if type -t log_end_msg | grep -i function > /dev/null; then
					log_end_msg 1
				fi
				if type -t failure | grep -i function > /dev/null; then
					failure
					echo ""
				fi
				;;
		esac
		;;
	status)
		if type -t status_of_proc | grep -i function > /dev/null; then
			status_of_proc -p "$PIDFILE" "$DAEMON" "$NAME" && exit 0 || exit $?
		fi
		if type -t status | grep -i function > /dev/null; then
			status -p "$PIDFILE" "$DAEMON" && exit 0 || exit $?
		fi
		;;
	restart)
		if type -t log_daemon_msg | grep -i function > /dev/null; then
			log_daemon_msg "Restarting $DESC " "$NAME"
		else
			echo -n "Starting $NAME: "
		fi
		do_stop
		case "$?" in
			0)
				sleep $SLEEPSEC
				do_start
				case "$?" in
					0)
						if type -t log_end_msg | grep -i function > /dev/null; then
							log_end_msg 0
						fi
						if type -t success | grep -i function > /dev/null; then
							success
							echo ""
						fi
						;;
					*)
						if type -t log_end_msg | grep -i function > /dev/null; then
							log_end_msg 1
						fi
						if type -t failure | grep -i function > /dev/null; then
							failure
							echo ""
						fi
						;;
				esac
				;;
			*)
				# Failed to stop
				if type -t log_end_msg | grep -i function > /dev/null; then
					log_end_msg 1
				fi
				if type -t failure | grep -i function > /dev/null; then
					failure
					echo ""
				fi
				;;
		esac
		;;
	*)
		echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
		exit 3
		;;
esac

exit $RETVAL

